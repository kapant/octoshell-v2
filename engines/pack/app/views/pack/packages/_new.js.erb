var labels= <%=raw [Pack::Access.human_attribute_name("forever"),Pack::Access.human_attribute_name("not_forever")].to_json%>;
bottomForm.alpaca({
  "schema":{
    "title": '<%= t ".new_access" %>',
    "type":"object",
    "properties":{
      "forever":{
        "type": "radio",
        "enum": ['true','false'],
        "required": true
      },
      "accessibles":{
      },
      "status":{
      },
      "type":{
      },
      "versions_ids":{
      },
      "to_type":{
      },
      "to_id":{
      },
      "end_lic":{
        "title": '<%=raw Pack::Access.human_attribute_name("end_lic")%>',
        "required": true,
        "dependencies": ["forever"]
      }
    }
  },
  "options":{
    "focus":"",
    "hideInitValidationError":true,
    "fields":{
      "forever":{
        "optionLabels": labels,
        "sort": false
      },
      "end_lic":{
        "dependencies":{
          "forever": "false"
        }
      },
      "status":{
        "type": "hidden"
      },
      "type":{
        "type": "hidden"
      },
      "version_id":{
        "type": "hidden"
      },
      "versions_ids":{
        "type": "hidden"
      },
      "to_type":{
        "type": "hidden"
      },
      "to_id":{
        "type": "hidden"
      },
      "accessibles":{
        "type": "hidden"
      },


    },
    "form": {
          "attributes": {
              "method": "post",
              "action": "/pack/accesses/update_accesses"
          },
          "buttons": {
              "submit": {
                  "title": '<%= t("buttons.save") %>',
                  "click": function() {
                     this.validate(true);
                     this.refreshValidationState(true);
                     var promise = this.ajaxSubmit();
                     promise.done(function(arg){
                       self.processAccesses(arg.accesses);
                       self.renderBottomForm(accessible,sel_value);
                       self.serverMessages.html('<font color="green"><%=t(".success")%></font>');
                     });
                     promise.fail(function(arg) {
                       self.processAccesses(arg.responseJSON.accesses);
                       self.renderBottomForm(accessible,sel_value);
                       self.serverMessages.html(`<font color="red">${arg.responseJSON.error}</font>`);
                     });
                   }
                }
              },
    }
  },
  "data":{
    "forever": false,
    "status": "new",
    "type": sel_value,
    "accessibles": JSON.stringify(self.groupAccessibles()),
    "to_id": accessible.data.id,
    "to_type": accessible.data.type
  },
  "postRender": function(control) {
    control.getControlByPath('end_lic')
           .getControlEl()
           .datepicker({
                        startDate: "0d"
                      });
  }
});
