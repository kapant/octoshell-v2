- type = SecureRandom.hex(4)
- g = stat.graph_data
- labels = g.map{|x| x[0]}
- values = g.map{|x| x[1]}
- pie = { labels: labels, datasets: [{data: values}]}
- bars = { labels: labels, datasets: [{label: stat.title, data: values}]}
h4
  == stat.title
  - if subdivision.present?
    | 
    span class="muted" = subdivision
div class="row"
  div class="col-xs-8"
    ul class="nav nav-tabs"
      li class="active"
        a href="#graph-#{type}-pie" data-toggle="tab" #{t('.pie_chart')}
      li
        a href="#graph-#{type}-column" data-toggle="tab" #{t('.columns')}
    div class="tab-content"
      div class="tab-pane active" id="graph-#{type}-pie"
        canvas id="pie-#{type}" class="graph graph-pie" data-source="#{pie.to_json}" data-title="#{stat.title}"
        /= pie_chart args
      div class="tab-pane" id="graph-#{type}-column"
        canvas id="bar-#{type}" class="graph graph-bar" data-source="#{bars.to_json}" data-title="#{stat.title}"
        /= bar_chart args
  div class="col-xs-4"
    div class="graph-table-download text-center"
      = link_to [:admin, stat, :download] do
        i class="icon-cloud-download"
        |  #{t('.download_csv')}
    div class="graph-table"
      table class="table table-condensed table-striped"
        - data.each do |array|
          tr
            - array.each do |item|
              td = item
            td style="width: 10px"
              small = link_to t('.show'), admin_stat_detail_path(stat, value: array.first), class: "muted"
